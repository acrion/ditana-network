# The Ditana configuration deliberately avoids creating or linking an /etc/resolv.conf file.
# systemd-resolved is configured to manage DNS resolution exclusively through its internal mechanisms.
# This approach eliminates potential conflicts and inconsistencies by centralizing DNS configuration
# under systemd-resolved, avoiding the redundancy of multiple DNS configurations.
# While this setup is robust for most environments, it is important to ensure that all applications
# relying on DNS resolution are compatible with systemd-resolved.

[Resolve]
# Clear previous DNS and FallbackDNS entries from the main configuration
# (Check effective values with resolvectl status)
DNS=
FallbackDNS=

# Set Cloudflare as the primary DNS servers and Quad9 as fallback
DNS=1.1.1.1 1.0.0.1 2606:4700:4700::1111 2606:4700:4700::1001
FallbackDNS=9.9.9.9 149.112.112.112 2620:fe::fe 2620:fe::9

# Enable DNSSEC (Domain Name System Security Extensions) to validate DNS responses.
# Valid values:
# - yes: Enforces DNSSEC validation strictly. If validation fails, the DNS query will fail.
# - allow-downgrade: Tries to validate DNS responses using DNSSEC, but allows fallback to non-validated DNS responses if the server does not support DNSSEC. This setting provides more compatibility at the cost of reduced security.
# - no: Disables DNSSEC entirely. DNS responses will not be validated, which might expose the system to certain types of attacks.
DNSSEC=allow-downgrade

# Enable DNS over TLS (Transport Layer Security) to encrypt DNS queries.
# Valid values:
# - yes: Forces all DNS queries to be sent over TLS. If the server does not support TLS, the DNS query will fail. This setting ensures maximum privacy.
# - opportunistic: Uses DNS over TLS if supported by the server, but falls back to unencrypted DNS if TLS is not available. This setting balances privacy and compatibility.
# - no: Disables DNS over TLS. DNS queries will be sent unencrypted, which might expose the queries to interception.
DNSOverTLS=opportunistic

Domains=~.
